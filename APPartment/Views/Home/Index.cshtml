@{
    ViewData["Title"] = "Home Page";
}

@model List<APPartment.Models.Base.BaseObject>

@{
    var nextMonth = DateTime.Now.AddMonths(1).Month.ToString();
    var thisMonth = DateTime.Now.Month.ToString();
    var rentDueDate = string.Empty;

    if (ViewData["RentDueDateDay"] != null && ViewData["RentDueDateDay"].ToString() != "0")
    {
        var dateString = $"{ViewData["RentDueDateDay"]}/{nextMonth}/{DateTime.Now.Year.ToString()}";
        
        if (DateTime.Parse(dateString).AddMonths(-1).Date > DateTime.Now.Date)
        {
            dateString = $"{ViewData["RentDueDateDay"]}/{thisMonth}/{DateTime.Now.Year.ToString()}";
        }

        rentDueDate = DateTime.Parse(dateString).ToLongDateString();
    }

    string inventoryModifiedDate = Model[0].ModifiedDate == null ? string.Empty : CalculateRelativeTime(Model[0].ModifiedDate.Value);
    string hygieneModifiedDate = Model[1].ModifiedDate == null ? string.Empty : CalculateRelativeTime(Model[1].ModifiedDate.Value);
    string issueModifiedDate = Model[2].ModifiedDate == null ? string.Empty : CalculateRelativeTime(Model[2].ModifiedDate.Value);

    string inventoryModifiedBy = Model[0].ModifiedBy == null ? string.Empty : Model[0].ModifiedBy;
    string hygieneModifiedBy = Model[1].ModifiedBy == null ? string.Empty : Model[1].ModifiedBy;
    string issueModifiedBy = Model[2].ModifiedBy == null ? string.Empty : Model[2].ModifiedBy;

    string inventoryItemName = string.Empty;
    string hygieneItemName = string.Empty;
    string issueItemName = string.Empty;

    string inventoryItemDetails = string.Empty;
    string hygieneItemDetails = string.Empty;
    string issueItemDetails = string.Empty;

    if (!string.IsNullOrEmpty(Model[0].Name))
    {
        inventoryItemName = Model[0].Name.Length <= 10 ? Model[0].Name : Model[0].Name.Substring(0, 20) + "...";
    }

    if (!string.IsNullOrEmpty(Model[1].Name))
    {
        hygieneItemName = Model[1].Name.Length <= 10 ? Model[1].Name : Model[1].Name.Substring(0, 20) + "...";
    }

    if (!string.IsNullOrEmpty(Model[2].Name))
    {
        issueItemName = Model[2].Name.Length <= 10 ? Model[2].Name : Model[2].Name.Substring(0, 20) + "...";
    }

    if (!string.IsNullOrEmpty(Model[0].Details))
    {
        inventoryItemDetails = Model[0].Details.Length <= 50 ? Model[0].Details : Model[0].Details.Substring(0, 50) + "...";
    }

    if (!string.IsNullOrEmpty(Model[1].Details))
    {
        hygieneItemDetails = Model[1].Details.Length <= 50 ? Model[1].Details : Model[1].Details.Substring(0, 50) + "...";
    }

    if (!string.IsNullOrEmpty(Model[2].Details))
    {
        issueItemDetails = Model[2].Details.Length <= 50 ? Model[2].Details : Model[2].Details.Substring(0, 50) + "...";
    }


    string CalculateRelativeTime(DateTime objectLastUpdate)
    {
        const int SECOND = 1;
        const int MINUTE = 60 * SECOND;
        const int HOUR = 60 * MINUTE;
        const int DAY = 24 * HOUR;
        const int MONTH = 30 * DAY;

        var ts = new TimeSpan(DateTime.Now.Ticks - objectLastUpdate.Ticks);
        double delta = Math.Abs(ts.TotalSeconds);

        if (delta < 1 * MINUTE)
            return ts.Seconds == 1 ? "One second ago" : ts.Seconds + " seconds ago";

        if (delta < 2 * MINUTE)
            return "A minute ago";

        if (delta < 45 * MINUTE)
            return ts.Minutes + " minutes ago";

        if (delta < 90 * MINUTE)
            return "An hour ago";

        if (delta < 24 * HOUR)
            return ts.Hours + " hours ago";

        if (delta < 48 * HOUR)
            return "Yesterday";

        if (delta < 30 * DAY)
            return ts.Days + " days ago";

        if (delta < 12 * MONTH)
        {
            int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30));
            return months <= 1 ? "One month ago" : months + " months ago";
        }
        else
        {
            int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365));
            return years <= 1 ? "One year ago" : years + " years ago";
        }
    }

    List<Message> messages;
}

<div class="row">
    <div class="col-md-4">
        <div class="card shadow mb-4 text-center">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Inventory - latest updates</h6>
            </div>
            <div class="card-body">
                @if (Model[0].Name != null)
                {
                    <p class="card-text">
                        <strong>Name</strong>: @inventoryItemName <br /> <strong>Details</strong>: @inventoryItemDetails
                    </p>
                }
                else
                {
                    <p class="card-text">No items in the inventory.</p>
                }
                <a asp-controller="Inventory" asp-action="Index" class="btn btn-primary">Go to inventory</a>
            </div>
            <div class="card-footer text-muted">
                @if (Model[0].Name != null)
                {
                    <p>@inventoryModifiedDate by @inventoryModifiedBy</p>
                }
                else
                {
                    <p>No updates...</p>
                }
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow mb-4 text-center">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Hygiene - latest updates</h6>
            </div>
            <div class="card-body">
                @if (Model[1].Name != null)
                {
                    <p class="card-text">
                        <strong>Name</strong>: @hygieneItemName <br /> <strong>Details</strong>: @hygieneItemDetails
                    </p>
                }
                else
                {
                    <p class="card-text">No items in the hygiene.</p>
                }

                <a asp-controller="Hygiene" asp-action="Index" class="btn btn-primary">Go to hygiene</a>
            </div>
            <div class="card-footer text-muted">
                @if (Model[1].Name != null)
                {
                    <p>@hygieneModifiedDate by @hygieneModifiedBy</p>
                }
                else
                {
                    <p>No updates...</p>
                }
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow mb-4 text-center">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Issues - latest updates</h6>
            </div>
            <div class="card-body">
                @if (Model[2].Name != null)
                {
                    <p class="card-text">
                        <strong>Name</strong>: @issueItemName <br /> <strong>Details</strong>: @issueItemDetails
                    </p>
                }
                else
                {
                    <p class="card-text">No issues present.</p>
                }
                <a asp-controller="Issues" asp-action="Index" class="btn btn-primary">Go to issues</a>
            </div>
            <div class="card-footer text-muted">
                @if (Model[2].Name != null)
                {
                    <p>@issueModifiedDate by @issueModifiedBy</p>
                }
                else
                {
                    <p>No updates...</p>
                }
            </div>
        </div>
    </div>
</div>

<br />

<div class="row">
    <div class="col-md-6">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Home chat room</h6>
            </div>
            <div class="card-body">
                <div class="container">
                    <input type="hidden" class="form-control" id="userInput" value="@ViewData["Username"]" />
                    <div class="row">
                        <div class="col-12"><textarea type="text" class="form-control" id="messageInput" rows="5" placeholder="Type a message..."></textarea></div>
                    </div>
                    <div class="row">&nbsp;</div>
                    <div class="row">
                        <div class="col-6">
                            <input type="submit" class="btn btn-primary" id="sendButton" value="Send Message" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <hr />
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <ul id="messagesList"></ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card border-left-danger shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">Rent due date</div>
                        <br />
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            @if (!string.IsNullOrEmpty(rentDueDate))
                            {
                                <h1 class="display-4">Rent due in @rentDueDate</h1>
                            }
                            else
                            {
                                <h1 class="display-4">Rent due date not set!</h1>
                            }

                            <hr class="my-4">
                            <p>New rent due date? You can manage your home from <a href="@Url.Action("Settings", "Home")">Settings</a>.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>

<script type="text/javascript">
    $("#sendButton").click(function () {

        var usernameValue = $('#userInput').val();
        var messageValue = $('#messageInput').val();

        $.ajax({
            type: "POST",
            url: "@Url.Action("CreateMessage", "Home")",
            data: { username: usernameValue, messageText: messageValue },
            dataType: "text",
            success: function () {

            },
            error: function (req, status, error) {
                alert(error);
            }
        });

        $("#messageInput").val('');
    });
</script>